const printf := std.io.printf;

const AccessLevel : enum = {
    admin,
    guest,
}

// This is an person struct that contains a name,
//   an optional id value, and an access level.
//   Guests do not recieve an id, hence the optional value
const Person : struct = {
    name : str,
    id   ? usize,
    level: AccessLevel,
}

// Zig-like struct initialization, Rust-like expression based returns
const Person.new : fn(name: str, id? usize, level: AccessLevel) -> Self = {
    .{
        .name = name,
        .id = id,
        .level = level,
    }
}

const Person.print : fn(self: &Self) -> void = {
    if (self.id) : |id|
        printf("Employee #{d}\n", id);
    printf("Name: {s}", self.name);
    printf("Access Level: {s}", self.level);
}

const main : fn() -> void = {
    val creator = Person.new(name: "Mew", id: 0000, level: .admin);
    creator.print();

    val some_guest = Person.new("Bob", null, .guest);
    some_guest.print();
}
